* change use of "stringstream ss" to build string to using std::to_string
* halValidate needs to have initSize, it is a bit tricky for halExport, you can't reallya pass the parser in because it only allows one "format", so I hacked it up.
* Add a units suffix (G, M) to mmapInitSize
* Drop mmap grow functionality, as it doesn't seem to work.  Maybe estimate the initial size from the input or just make it huge.
* api/impl/defaultMappedSegment.h says
note it would be nice to extend SegmentIterator but the crappy smart pointer interface makes it impossible to use "this" as a parameter to lots of api functions.  simplest for now just to contain a pair of segment iterators and wrap up all the interface methods. 
* Get rid of iterators implementing the types they are iterating over.  Add an explict get or operator*. This will allow  more inlining.
* does this still make sense now that databases doesn't have constness defaultGappedBottomSegmentIterator.h - keep convention of other iterators where const-ness only applies to the database and not the iterator...
* getSegment is duplicated in different places due to top/bottom/gapped/ungapped implementations.  Is this a good approach?
* typedef containers for HAL objects (e.g. std::set<MappedSegmentConstPtr>) instead of repeating
* make more members private
* change to std::shared_ptr
* there should not be const pointers for iterators??  Check why const_pointer_cast is needed
* how useful is it that Top/BottomSegmentIterators are the same base class?  Do you ever just iterate not caring? joel: hmm, not sure. i feel like you almost always *should* care, but IIRC the mappedSegment code uses the generic SegmentIterator and downcasts it based on the isTop() response when it needs to treat it like a top/bottom segment.  This creates dynamic casts, but because SegmentIterator is virtual.
* Investigate const casts added with std::shared_ptr, are they really needed?
* Why Genome* rather than smart pointer: halMappedSegmentTest.cpp
* change most pointer function arguments to be reference.
* behavior of ColumnIterator: the last column is inclusive, so if you use toRight() on the last base you crash
* DNAIterator doesn't have a direct way to check for end
  hal_index_t n = ancGenome->getSequenceLength();
  DNAIteratorPtr dnaIt = ancGenome->getDNAIterator();
  for (; dnaIt->getArrayIndex() < n; dnaIt->toRight()) {
* smart pointer casting:
https://herbsutter.com/2012/06/21/reader-qa-why-dont-modern-smart-pointers-implicitly-convert-to/
* dropped gapped: "Interface for Gapped Top Segment iterator.  Only used internally"
